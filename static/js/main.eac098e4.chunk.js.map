{"version":3,"sources":["LinkedText.js","BubbleChart.js","App.js","index.js"],"names":["LinkedText","props","createLinkedText","bind","divRef","React","createRef","this","_self","reportData","then","reports","report","rep","document","createElement","append","createTextNode","text","className","addEventListener","event","focusArgs","setFocus","current","appendChild","ref","Component","BubbleChart","createBubbleChart","emphasisObjects","Set","defaulttimeRange","timeRange","add","undefined","node","width","height","margin","x","d3","y","radius","color","d","has","svg","timeSlider","update","year","selectAll","data","dataAt","name","sort","a","b","population","transition","duration","attr","income","lifeExpectancy","dataset","map","region","valueAt","values","i","left","length","t","data_load","join","call","circle","xAxis","g","ticks","select","remove","yAxis","renderAxes","on","value","setInterval","currentTime","Number","property","id","type","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eac098e4.chunk.js","sourcesContent":["import \"./LinkedText.css\";\nimport React, { Component } from 'react'\nimport * as d3 from 'd3';\nimport { timeDay } from 'd3';\n\nclass LinkedText extends Component {\n    constructor(props) {\n        super(props);\n        this.createLinkedText = this.createLinkedText.bind(this);\n        this.divRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.createLinkedText()\n    }\n    componentDidUpdate() {\n        this.createLinkedText()\n    }\n\n    createLinkedText() {\n        const _self = this;\n        _self.props.reportData.then(function (reports) {\n            for(let report of reports){\n                const rep = document.createElement('span');\n                rep.append(document.createTextNode(report.text));\n                rep.className = 'nonselected'\n                rep.addEventListener(\"mouseenter\", (event) => {   \n                    if(report.focusArgs === null){\n                        return;\n                    }\n                    _self.props.setFocus(...report.focusArgs);\n                    rep.className = 'selected'\n                  }, false);\n                rep.addEventListener(\"mouseleave\", (event) => {   \n                    _self.props.setFocus();\n                    rep.className = 'nonselected'\n                    }, false);\n                  _self.divRef.current.appendChild(rep);\n            }\n        });\n    }\n\n    render() {\n        return <div ref={this.divRef} />\n    }\n}\n\nexport default LinkedText\n","import React, { Component } from 'react'\nimport LinkedText from './LinkedText'\nimport * as d3 from 'd3';\n\nclass BubbleChart extends Component {\n    constructor(props) {\n        super(props);\n        this.createBubbleChart = this.createBubbleChart.bind(this);\n        this.setFocus = this.setFocus.bind(this);\n        this.emphasisObjects = new Set();\n        this.defaulttimeRange = [1800, 2009];\n        this.timeRange = this.defaulttimeRange;\n        this.emphasisObjects.add(\"United States\");\n    }\n\n    setFocus(timeRange, emphasisObjects){\n        if(timeRange === null || timeRange === undefined){\n            this.timeRange = this.defaulttimeRange;\n        }else{\n            this.timeRange = timeRange;\n        }\n        this.emphasisObjects =　new Set(emphasisObjects);\n    }\n\n    componentDidMount() {\n        this.createBubbleChart()\n    }\n    componentDidUpdate() {\n        this.createBubbleChart()\n    }\n\n    createBubbleChart() {\n        const _self = this;\n        const node = this.node\n        let width = 1000,\n            height = 500,\n            margin = ({top: 20, right: 20, bottom: 35, left: 40}),\n            interval = 200; \n        var x = d3.scaleLog([200, 1e5], [margin.left, width - margin.right]), \n            y = d3.scaleLinear([14, 86], [height - margin.bottom, margin.top]),\n            radius = d3.scaleSqrt([0, 5e8], [0, width / 24]),\n            color = d => _self.emphasisObjects.has(d)?\"red\":\"black\";\n\n        let svg = d3.select(node);\n        let timeSlider = d3.select('#timeSlider');\n\n        svg.attr(\"height\", height)\n            .attr(\"width\", width);\n\n        _self.props.data_load.then(function (dataset) {\n            // 図の初期化\n            _self.dataset = dataset;\n            timeSlider.attr('min', _self.timeRange[0]).attr('max', _self.timeRange[1]).attr('value', _self.timeRange[0])\n            svg.append(\"g\").attr(\"stroke\", \"black\")\n                           .selectAll(\"circle\")\n                           .data(dataAt(_self.timeRange[0]), d => d.name)\n                           .join(\"circle\")\n                           .sort((a, b) => d3.descending(a.population, b.population))\n                           .attr(\"cx\", d => x(d.income))\n                           .attr(\"cy\", d => y(d.lifeExpectancy))\n                           .attr(\"r\", d => radius(d.population))\n                           .attr(\"fill\", d => color(d.name))\n                           .call(circle => circle.append(\"title\")\n                           .text(d => [d.name, d.region].join(\"\\n\")));\n\n            renderAxes(svg)\n        });\n        timeSlider.on(\"change\", function() {\n            update(this.value)\n        });\n        function step(){\n            const currentTime = Number(timeSlider.property('value'));\n            if (currentTime >= _self.timeRange[1] || currentTime < _self.timeRange[0]){\n                timeSlider.property('value', _self.timeRange[0]);\n                update(_self.timeRange[0]);\n            } else{\n                timeSlider.property('value', currentTime+1);\n                update(currentTime+1)\n            }\n        }\n        setInterval(step, interval)\n\n        function update(year){\n            const circles = svg.selectAll('circle')\n            circles.data(dataAt(year), d => d.name)\n                    .sort((a, b) => d3.descending(a.population, b.population))\n                    .transition().duration(interval)\n                    .attr(\"cx\", d => x(d.income))\n                    .attr(\"cy\", d => y(d.lifeExpectancy))\n                    .attr(\"r\", d => radius(d.population))\n                    .attr(\"fill\", d => color(d.name))\n        }\n\n        function dataAt(year) {\n            return _self.dataset.map(d => ({\n              name: d.name,\n              region: d.region,\n              income: valueAt(d.income, year),\n              population: valueAt(d.population, year),\n              lifeExpectancy: valueAt(d.lifeExpectancy, year)\n            }))\n        }\n\n        function valueAt(values, year) {\n            const i = d3.bisector(([year]) => year).left(values, year, 0, values.length - 1);\n            const a = values[i];\n            if (year>a[0] || i===0){\n                return  a[1];\n                  \n            } else {\n              const b = values[i - 1];\n              const t = (year - a[0]) / (b[0] - a[0]);\n              return a[1] * (1 - t) + b[1] * t;\n            }\n          }\n\n        function renderAxes(svg) {\n            var xAxis = g => g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                              .call(d3.axisBottom(x).ticks(width / 80, \",\"))\n                              .call(g => g.select(\".domain\").remove())\n                              .call(g => g.append(\"text\")\n                                  .attr(\"x\", width)\n                                  .attr(\"y\", margin.bottom - 4)\n                                  .attr(\"fill\", \"currentColor\")\n                                  .attr(\"text-anchor\", \"end\")\n                                  .text(\"Income per capita (dollars) →\"));\n\n            var yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`)\n                              .call(d3.axisLeft(y))\n                              .call(g => g.select(\".domain\").remove())\n                              .call(g => g.append(\"text\")\n                                  .attr(\"x\", -margin.left)\n                                  .attr(\"y\", 10)\n                                  .attr(\"fill\", \"currentColor\")\n                                  .attr(\"text-anchor\", \"start\")\n                                  .text(\"↑ Life expectancy (years)\"))\n\n            svg.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .call(xAxis);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .call(yAxis);\n        }\n\n    }\n\n    render() {\n        return <div>\n        <div>\n            <input id=\"timeSlider\" type=\"range\"/>\n        </div>\n        <div>\n            <svg ref={node => this.node = node}/>\n            <LinkedText reportData={this.props.reportData} setFocus={this.setFocus}/>\n        </div>\n        </div>\n    }\n}\n\nexport default BubbleChart\n","import './App.css';\nimport React, { Component } from 'react'\nimport BubbleChart from './BubbleChart'\nimport * as d3 from 'd3';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    const data_load = d3.json(\"./nations.json\"),\n    reportData = d3.json(\"./sample_text.json\");\n    return (\n      <div>\n        <h2>React D3.js Bubble chart</h2>\n        <BubbleChart data_load={data_load} reportData={reportData}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}